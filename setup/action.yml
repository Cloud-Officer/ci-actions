---
name: 'Setup'
description: 'Setup tools'

inputs:
  ssh-key:
    description: 'ssh key'
    required: false
  aws-access-key-id:
    description: 'aws access key id'
    required: false
  aws-secret-access-key:
    description: 'aws secret access key'
    required: false
  aws-region:
    description: 'aws region'
    required: false
  go-version:
    description: 'The Go version to download (if necessary) and use. Supports semver spec and ranges'
    required: false
    default: 'none'
  go-check-latest:
    description: 'Set this option to true if you want the action to always check for the latest available version that satisfies the version spec'
    required: false
    default: false
  go-token:
    description: 'Used to pull node distributions from go-versions'
    required: false
    default: ${{ github.token }}
  php-version:
    description: 'Setup PHP version.'
    required: false
    default: 'none'
  php-extensions:
    description: 'Setup PHP extensions'
    required: false
  php-ini-file:
    description: 'Set base ini file'
    required: false
    default: 'production'
  php-ini-values:
    description: 'Add values to php.ini'
    required: false
  php-coverage:
    description: 'Setup code coverage driver'
    required: false
  php-tools:
    description: 'Setup popular tools globally'
    required: false
    default: 'composer'
  python-version:
    description: "Version range or exact version of a Python version to use, using SemVer's version range syntax."
    required: false
    default: 'none'
  python-cache:
    description: 'Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv.'
    required: false
    default: 'pip'
  python-architecture:
    description: 'The target architecture (x86, x64) of the Python interpreter.'
    required: false
    default: 'x64'
  python-token:
    description: Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
    required: false
    default: ${{ github.token }}
  python-cache-dependency-path:
    description: 'Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.'
    required: false
  ruby-version:
    description: 'Engine and version to use, see the syntax in the README. Reads from .ruby-version or .tool-versions if unset.'
    required: false
    default: 'none'
  ruby-rubygems:
    description: 'The version of RubyGems to use. Either default, latest, or a version number'
    required: false
    default: 'default'
  ruby-bundler:
    description: 'The version of Bundler to install. Either none, latest, Gemfile.lock, or a version number'
    required: false
    default: 'default'
  ruby-bundler-cache:
    description: 'Run "bundle install", and cache the result automatically. Either true or false'
    required: false
    default: 'false'
  ruby-working-directory:
    description: 'The working directory to use for resolving paths for .ruby-version, .tool-versions and Gemfile.lock'
    required: false
    default: '.'
  ruby-cache-version:
    description: 'Arbitrary string that will be added to the cache key of the bundler cache'
    required: false
    default: '0'
  xcode-version:
    description: 'Version of Xcode to use'
    required: false
    default: 'none'
  mongodb-version:
    description: 'MongoDB version to use'
    default: 'none'
    required: false
  mongodb-replica-set:
    description: 'MongoDB replica set name (no replica set by default)'
    required: false
    default: ''
  mongodb-port:
    description: 'MongoDB port to use (default 27017)'
    required: false
    default: 27017
  mongodb-db:
    description: 'MongoDB db to create (default: none)'
    required: false
    default: ''
  mongodb-username:
    description: 'MongoDB root username (default: none)'
    required: false
    default: ''
  mongodb-password:
    description: 'MongoDB root password (default: none)'
    required: false
    default: ''
  mysql-version:
    description: 'The version of MySQL and MariaDB'
    required: false
    default: 'none'
  mysql-distribution:
    description: 'The distribution. valid values are mysql or mariadb'
    required: false
    default: 'mysql'
  mysql-auto-start:
    description: 'Start MySQL server if it is true'
    required: false
    default: 'true'
  mysql-my-cnf:
    description: 'my.cnf settings for mysqld'
    required: false
    default: ''
  mysql-root-password:
    description: 'password for the root user'
    required: false
  mysql-user:
    description: 'name of a new user'
    required: false
  mysql-password:
    description: 'password for the new user'
    required: false
  redis-version:
    description: 'the version of redis'
    required: true
    default: 'none'
  redis-port:
    description: 'the port of redis-sever'
    required: true
    default: '6379'
  redis-tls-port:
    description: 'the tls port of redis-sever'
    required: false
    default: '0'
  redis-auto-start:
    description: 'enable to auto-start redis-sever'
    required: true
    default: 'true'
  redis-conf:
    description: 'extra configurations for redis.conf'
    required: false
  apt-packages:
    description: 'additional apt packages to install'
    required: false
    default: 'none'

outputs:
  tuist-cache-hit:
    description: 'Cache hit for Tuist'
    value: ${{ steps.tuist.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    # https://github.com/marketplace/actions/checkout
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ inputs.ssh-key }}
        persist-credentials: true
        lfs: true
        submodules: recursive

    # https://github.com/marketplace/actions/webfactory-ssh-agent
    - uses: webfactory/ssh-agent@v0.7.0
      if: ${{ inputs.ssh-key != ''}}
      with:
        ssh-private-key: ${{ inputs.ssh-key }}

    # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
    - uses: aws-actions/configure-aws-credentials@v1-node16
      if: ${{ inputs.aws-access-key-id != '' }}
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    # install apt packages
    - shell: bash
      if: ${{ inputs.apt-packages != 'none' }}
      run: |
        sudo apt-get --yes update
        sudo apt-get --yes --no-install-recommends install ${{ inputs.apt-packages }}

    # https://github.com/marketplace/actions/setup-go-environment
    - uses: actions/setup-go@v3
      if: ${{ inputs.go-version != 'none' }}
      with:
        go-version: ${{ inputs.go-version }}
        check-latest: ${{ inputs.go-check-latest }}
        token: ${{ inputs.go-token }}

    # https://github.com/marketplace/actions/cache
    - uses: actions/cache@v3
      if: ${{ inputs.go-version != 'none' }}
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-

    # https://github.com/marketplace/actions/setup-php-action
    - uses: shivammathur/setup-php@v2
      if: ${{ inputs.php-version != 'none' }}
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.php-extensions }}
        ini-file: ${{ inputs.php-ini-file }}
        ini-values: ${{ inputs.php-ini-values }}
        coverage: ${{ inputs.php-coverage }}
        tools: ${{ inputs.php-tools }}

    # https://github.com/marketplace/actions/cache
    - id: composer-cache
      shell: bash
      if: ${{ inputs.php-version != 'none' }}
      run: echo "dir=$(composer config cache-files-dir)" >> "${GITHUB_OUTPUT}"
    - uses: actions/cache@v3
      if: ${{ inputs.php-version != 'none' }}
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    # https://github.com/marketplace/actions/setup-python
    - uses: actions/setup-python@v3
      if: ${{ inputs.python-version != 'none' }}
      with:
        python-version: ${{ inputs.python-version }}
        cache: ${{ inputs.python-cache }}
        architecture: ${{ inputs.python-architecture }}
        token: ${{ inputs.python-token }}
        cache-dependency-path: ${{ inputs.python-cache-dependency-path }}

    # https://github.com/marketplace/actions/cache
    - uses: actions/cache@v3
      if: ${{ inputs.python-version != 'none' }}
      with:
        path: ${{ env.pythonLocation }}
        key: pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    # https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby
    - uses: ruby/setup-ruby@v1
      if: ${{ inputs.ruby-version != 'none' }}
      with:
        ruby-version: ${{ inputs.ruby-version }}
        rubygems: ${{ inputs.ruby-rubygems }}
        bundler: ${{ inputs.ruby-bundler }}
        bundler-cache: ${{ inputs.ruby-bundler-cache }}
        working-directory: ${{ inputs.ruby-working-directory }}
        cache-version: ${{ inputs.ruby-cache-version }}

    # https://github.com/marketplace/actions/setup-xcode-version
    - uses: maxim-lobanov/setup-xcode@v1
      if: ${{ inputs.xcode-version != 'none' && runner.os == 'macOS'}}
      with:
        xcode-version: ${{ inputs.xcode-version }}

    # https://github.com/marketplace/actions/cache
    - uses: actions/cache@v3
      if: ${{ inputs.xcode-version != 'none' && runner.os == 'macOS'}}
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: ${{ runner.os }}-carthage-

    # https://github.com/marketplace/actions/cache
    - uses: actions/cache@v3
      if: ${{ inputs.xcode-version != 'none' && runner.os == 'macOS'}}
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: ${{ runner.os }}-pods-

    # https://github.com/marketplace/actions/cache
    - uses: actions/cache@v3
      if: ${{ inputs.xcode-version != 'none' && runner.os == 'macOS'}}
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: ${{ runner.os }}-spm-

    # https://github.com/marketplace/actions/cache
    - uses: actions/cache@v3
      id: tuist
      if: ${{ inputs.xcode-version != 'none' && runner.os == 'macOS'}}
      with:
        path: |
          Tuist/Cache
          Tuist/Dependencies
        key: ${{ runner.os }}-tuist-${{ hashFiles('Tuist/Dependencies/Lockfiles/Package.resolved') }}
        restore-keys: ${{ runner.os }}-tuist-

    # https://github.com/marketplace/actions/mongodb-in-github-actions
    - uses: supercharge/mongodb-github-action@1.7.0
      if: ${{ inputs.mongodb-version != 'none' }}
      with:
        mongodb-version: ${{ inputs.mongodb-version }}
        mongodb-replica-set: ${{ inputs.mongodb-replica-set }}
        mongodb-port: ${{ inputs.mongodb-port }}
        mongodb-db: ${{ inputs.mongodb-db }}
        mongodb-username: ${{ inputs.mongodb-username }}
        mongodb-password: ${{ inputs.mongodb-password }}

    # https://github.com/marketplace/actions/actions-setup-mysql
    - uses: shogo82148/actions-setup-mysql@v1
      if: ${{ inputs.mysql-version != 'none' }}
      with:
        mysql-version: ${{ inputs.mysql-version }}
        distribution: ${{ inputs.mysql-distribution }}
        auto-start: ${{ inputs.mysql-auto-start }}
        my-cnf: ${{ inputs.mysql-my-cnf }}
        root-password: ${{ inputs.mysql-root-password }}
        user: ${{ inputs.mysql-user }}
        password: ${{ inputs.mysql-password }}

    # https://github.com/marketplace/actions/actions-setup-redis
    - uses: shogo82148/actions-setup-redis@v1
      if: ${{ inputs.redis-version != 'none'}}
      with:
        redis-version: ${{ inputs.redis-version }}
        redis-port: ${{ inputs.redis-port }}
        redis-tls-port: ${{ inputs.redis-tls-port }}
        auto-start: ${{ inputs.redis-auto-start }}
        redis-conf: ${{ inputs.redis-conf }}
