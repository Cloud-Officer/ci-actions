---
name: 'PHPStan'
description: 'Execute phpstan'

inputs:
  linters:
    description: 'List of all enabled linters'
    required: true
  ssh-key:
    description: 'ssh key'
    required: true
  github_token:
    description: 'github token'
    required: true
  apt-packages:
    description: 'additional apt packages to install'
    required: false
    default: 'none'
  php-version:
    description: 'php version'
    required: false
    default: '8.2'
  php-extensions:
    description: 'php extensions'
    required: false
    default: ''
  composer-command:
    description: 'composer command'
    required: false
    default: 'composer install'
  php-stan-command:
    description: 'php stan command(s)'
    required: false
    default: './vendor/bin/phpstan analyse'

runs:
  using: "composite"
  steps:
    - name: Check if PHPStan is enabled
      id: check
      shell: bash
      run: if echo "${{ inputs.linters }}" | grep PHPSTAN &> /dev/null; then echo "continue=true" >> "${GITHUB_OUTPUT}"; else echo "continue=false" >> "${GITHUB_OUTPUT}"; fi

    # https://github.com/marketplace/actions/checkout
    - name: Checkout
      uses: actions/checkout@v4
      if: ${{ steps.check.outputs.continue == 'true' }}
      with:
        ssh-key: ${{ inputs.ssh-key }}
        persist-credentials: true
        lfs: true
        submodules: recursive

    # https://github.com/marketplace/actions/webfactory-ssh-agent
    - name: Setup SSH Agent
      uses: webfactory/ssh-agent@v0.9.1
      if: ${{ inputs.ssh-key != ''}}
      with:
        ssh-private-key: ${{ inputs.ssh-key }}

    # install apt packages
    - name: Install APT Packages
      shell: bash
      if: ${{ inputs.apt-packages != 'none' }}
      run: |
        sudo apt-get --yes update
        sudo apt-get --yes --no-install-recommends install ${{ inputs.apt-packages }}

    # https://github.com/marketplace/actions/setup-php-action
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      if: ${{ steps.check.outputs.continue == 'true' }}
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.php-extensions }}
        tools: composer

    # https://github.com/marketplace/actions/cache
    - name: Cache - Composer Location
      id: composer-cache
      shell: bash
      if: ${{ inputs.php-version != 'none' }}
      run: echo "dir=$(composer config cache-files-dir)" >> "${GITHUB_OUTPUT}"
    - name: Cache - Composer
      uses: actions/cache@v4
      if: ${{ steps.check.outputs.continue == 'true' }}
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Run Composer
      shell: bash
      if: ${{ steps.check.outputs.continue == 'true' }}
      run: ${{ inputs.composer-command }}

    # https://phpstan.org/
    - name: Run PHPStan
      shell: bash
      if: ${{ steps.check.outputs.continue == 'true' }}
      run: ${{ inputs.php-stan-command }}
